plugins {
    id 'java-library'
    id 'java-test-fixtures'
    id 'maven-publish'
    id 'jacoco'
    id 'com.jrmcdonald.ms-gradle-baseline' version "${gradleBaselinePluginVerson}"
}

group = 'com.jrmcdonald'

repositories {
    mavenCentral()
    maven {
        url = 'https://maven.pkg.github.com/jrmcdonald/ms-common'
        credentials {
            username = "jrmcdonald"
            password = project.findProperty('GITHUB_TOKEN') ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    commonPlatform platform("com.jrmcdonald:ms-common-bom:${commonPlatformVersion}")

    compileOnly group: 'org.projectlombok', name: 'lombok'
    annotationProcessor group: 'org.projectlombok', name: 'lombok'

    implementation 'com.jrmcdonald:ms-common-ext-spring-datetime'
    implementation 'com.jrmcdonald:ms-common-ext-spring-reactive-context'
    implementation 'com.jrmcdonald:ms-common-ext-spring-reactive-filter'

    implementation group: 'com.github.spotbugs', name: 'spotbugs-annotations'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder'
    implementation group: 'net.sf.biweekly', name: 'biweekly', version: "${biweeklyVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-kubernetes-all'

    testCompileOnly group: 'org.projectlombok', name: 'lombok'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter'
    testImplementation group: 'com.squareup.okhttp3', name: 'okhttp'
    testImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation group: 'io.projectreactor', name: 'reactor-test'

    testFixturesCompileOnly group: 'org.projectlombok', name: 'lombok'
    testFixturesAnnotationProcessor group: 'org.projectlombok', name: 'lombok'

    testFixturesImplementation group: 'com.github.spotbugs', name: 'spotbugs-annotations'
    testFixturesImplementation group: 'org.slf4j', name: 'slf4j-api'
    testFixturesImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver'
    testFixturesImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api'
}

test {
    // Make sure the classes dir is used on the test classpath.
    // When test fixtures are involved, the JAR is used by default
    classpath = sourceSets.main.output.classesDirs + classpath - files(jar.archiveFile)
}

configurations {
    testFixturesCompileOnly.extendsFrom(commonPlatform)
    testFixturesAnnotationProcessor.extendsFrom(commonPlatform)
    testFixturesImplementation.extendsFrom(commonPlatform)

    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
        it.outgoing.artifact(bootJar)
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/jrmcdonald/ifsc-ical-generator")
            credentials {
                username = "jrmcdonald"
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

bootJar {
    enabled = true
}

jar {
    enabled = true
}

bootBuildImage {
    imageName = "jrmcdonald/ifsc-ical-generator:${project.version}"
}